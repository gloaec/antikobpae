<% if Rails.version < "3.1" %>
<!-- load JQuery if not loaded -->
<script type="text/javascript" src="http://www.google.com/jsapi"></script>
<script type="text/javascript">
  if(typeof jQuery === 'undefined') google.load("jquery", "1.3");
</script>

<!-- Load Queue widget CSS and jQuery -->
<style type="text/css">@import url(/stylesheets/plupload-rails3/plupload.queue.css);</style>

<!-- Load plupload and all it's runtimes and finally the jQuery queue widget -->
<script type="text/javascript" src="/javascripts/plupload-rails3/plupload/js/plupload.full.js"></script>
<script type="text/javascript" src="/javascripts/plupload-rails3/plupload/js/jquery.plupload.queue/jquery.plupload.queue.js"></script>

<!-- Thirdparty intialization scripts, needed for the Google Gears and BrowserPlus runtimes -->
<script type="text/javascript" src="http://bp.yahooapis.com/2.4.21/browserplus-min.js"></script>
<script type="text/javascript" src="/javascripts/plupload-rails3/plupload/js/plupload.gears.js"></script>
<% else %>
  
  <style type="text/css">@import url(/assets/plupload-rails3/plupload.queue.3.1.css);</style>
  <%= javascript_include_tag 'plupload-rails3/plupload/js/plupload.full.js' %>
  <%= javascript_include_tag 'plupload-rails3/plupload/js/jquery.plupload.queue/jquery.plupload.queue.js' %>
  <%= javascript_include_tag 'plupload-rails3/plupload/js/plupload.gears.js' %>
  
<% end %>


<script type="text/javascript">

  // Convert divs to queue widgets when the DOM is ready
  $(function() {   
    var authtoken = $("input[name=authenticity_token]").val();
    $("#<%= options[:plupload_container] %>").pluploadQueue({
      // General settings
      runtimes : '<%= options[:runtimes] %>',
      <% unless options[:pluploader] %>
        url : '<%= url_for(model_object) %>',
      <% else %>
        url : '<%= pluploader_path %>',
      <% end %>
      max_file_size : '<%= options[:max_file_size] %>mb',
      //chunk_size : '1mb',
      //unique_names : true,
      multipart: true,
      multipart_params : 
      $.extend({
          <% if options[:params].count > 0 %>'<%= CGI::unescape(options[:params].to_param).split("=").join("':'").gsub("&", "', '") %>'<% end %>
        }, 
        {
          authenticity_token : authtoken, 
          "_method" : "<%= [model_object].flatten.pop.new_record? ? 'post' : 'put' %>", 
          "_plupload_upload" : "<%= options[:field_name] %>"
        }
      ),
      <% if options[:filters].count > 0 %>
        filters : <%= options[:filters].to_json.to_s.html_safe %>,
      <% end %>
      flash_swf_url : '/javascripts/plupload-rails3/plupload/js/plupload.flash.swf',
      silverlight_xap_url : '/javascripts/plupload-rails3/plupload/js/plupload.silverlight.xap'
      <% if options[:pluploader] %>
      , 
      init: {
        FileUploaded: function(up, file, info) {
          eval(info.response);
        }
      }
      <% end %>
    });

  });
</script>